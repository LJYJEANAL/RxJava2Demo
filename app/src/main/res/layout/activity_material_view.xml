<?xml version="1.0" encoding="utf-8"?>
<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/drawable"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <android.support.design.widget.CoordinatorLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <android.support.design.widget.AppBarLayout
            android:id="@+id/appbar"
            android:layout_width="match_parent"
            android:layout_height="260dp"
            android:fitsSystemWindows="true"
            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">
            <!--设置滚动表现：
            1、 Scroll, 表示手指向上滑动的时候,CollapsingToolbarLayout也会向上滚出屏幕并且消失，这个属性必须要有。
            2、 exitUntilCollapsed, 表示这个layout会一直滚动离开屏幕范围,直到它收折成它的最小高度.有exitUntilCollapsed属性最后会固定在头部
            没有exitUntilCollapsed 属性：最后会滑出去
             3、enterAlways: 一旦手指向下滑动这个view就可见。
            4、enterAlwaysCollapsed:
            这个flag定义的是已经消失之后何时再次显示。假设你定义了一个最小高度（minHeight）同时enterAlways也定义了， 那么view将在到达 这个最小高度的时候开始显示，并且从这个时候开始慢慢展开，当滚动到顶部的时候展开完
             -->
            <android.support.design.widget.CollapsingToolbarLayout
                android:id="@+id/collapsing_toolbar_layout"
                android:layout_width="match_parent"
                android:layout_height="0dip"
                android:layout_weight="1"
                app:layout_scrollFlags="scroll|exitUntilCollapsed|snap"
                app:statusBarScrim="@android:color/transparent">

                <ImageView
                    android:id="@+id/backdrop"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:fitsSystemWindows="true"
                    android:scaleType="centerCrop"
                    android:src="@drawable/header"
                    app:layout_collapseMode="parallax"
                    app:layout_collapseParallaxMultiplier="0.7" />
                <!--1、 pin
                在view折叠的时候Toolbar仍然被固定在屏幕的顶部。
                2、 parallax
                设置为这个模式时，在内容滚动时，CollapsingToolbarLayout中的View
                （比如ImageView)也可以同时滚动，实现视差滚动效果, 通常和layout_collapseParallaxMultiplier(设置视差因子，值为0~1)搭配使用。
                parallax：视差
                toolbar设置parallax： 注意看左上角的箭头,它会滑出头布局-->
                <android.support.v7.widget.Toolbar
                    android:id="@+id/toolbar"
                    android:layout_width="match_parent"
                    android:layout_height="?attr/actionBarSize"
                    android:minHeight="?attr/actionBarSize"
                    android:tag=":aesthetic_ignore"
                    app:contentInsetLeft="0dp"
                    app:contentInsetRight="0dp"
                    app:layout_collapseMode="pin"
                    app:titleTextAppearance="@style/Toolbar.TitleText"
                    app:titleTextColor="@android:color/white"
                    app:layout_scrollFlags="scroll|enterAlways"
                    app:popupTheme="@style/AppTheme.PopupOverlay"
                    app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"></android.support.v7.widget.Toolbar>

            </android.support.design.widget.CollapsingToolbarLayout>

        </android.support.design.widget.AppBarLayout>

        <include
            android:id="@+id/scroll_layout"
            layout="@layout/netscrollview_layout"
            app:layout_behavior="@string/appbar_scrolling_view_behavior"></include>

        <android.support.design.widget.FloatingActionButton
            android:id="@+id/fab"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_margin="16sp"
            android:focusable="true"
            android:clickable="true"
            android:src="@drawable/ic_check_black_24dp"
            app:useCompatPadding="true"
            app:elevation="10dp"
            app:fabSize="normal"
            app:borderWidth="0dp"
            android:layout_gravity="bottom|end"
            />
    </android.support.design.widget.CoordinatorLayout>

    <android.support.design.widget.NavigationView
        android:id="@+id/navigationView"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        app:headerLayout="@layout/nav_header"
        app:itemIconTint="#333"
        app:itemTextColor="#333"

        app:menu="@menu/activity_net_drawable_drawer" />
    <!--
           anchor： 锚
           app:layout_anchor
           设置这个属性可以让FloatingActionButton以某一个控件为基准调整位置，我们这里设置这个控件就是appbar
           -->

    <!--   app:layout_anchor="@+id/scroll_layout"
       app:layout_anchorGravity="bottom|right|end"-->
</android.support.v4.widget.DrawerLayout>


